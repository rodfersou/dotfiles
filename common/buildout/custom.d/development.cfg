[buildout]
parts +=
    omelette
    i18ndude
    zdb
eggs +=
    plone.app.debugtoolbar
    Products.PDBDebugMode
    Products.enablesettrace
    plone.reload

[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}


#[instance]
#eggs =
#    Plone
#    sauna.reload
#    plone.app.upgrade
#    ${buildout:package-name}
#    ${buildout:eggs}
#zope-conf-additional = %import sauna.reload

[i18ndude]
recipe = zc.recipe.egg
eggs = i18ndude

# [rebuild_i18n-sh]
# recipe = collective.recipe.template
# output = ${buildout:directory}/bin/rebuild_i18n.sh
# mode = 755
# input = inline:
#     #! /bin/sh
#     # see http://maurits.vanrees.org/weblog/archive/2010/10/i18n-plone-4 for more information

#     I18NDOMAIN="${buildout:package-name}"

#     # find the locales dir
#     LOCALES=`find . -type d | grep ${buildout:package-name} | grep -m 1 "locales"`
#     SOURCE=`dirname $LOCALES`;

#     # rebuild pot file for package's domain and merge it with any manual translations needed
#     bin/i18ndude rebuild-pot --pot $LOCALES/$I18NDOMAIN.pot --merge $LOCALES/manual.pot --create $I18NDOMAIN $SOURCE

#     # synchronise translations for package's domain
#     for po in $LOCALES/*/LC_MESSAGES/$I18NDOMAIN.po; do
#         bin/i18ndude sync --pot $LOCALES/$I18NDOMAIN.pot $po
#     done

#     # rebuild pot file for Plone's domain
#     bin/i18ndude rebuild-pot --pot $LOCALES/plone.pot --create plone $SOURCE/configure.zcml $SOURCE/profiles/default

#     # synchronise translations for Plone's domain
#     for po in $LOCALES/*/LC_MESSAGES/plone.po; do
#         bin/i18ndude sync --pot $LOCALES/plone.pot $po
#     done

[zdb]
recipe = zc.recipe.egg
eggs =
    ${instance:eggs}
    ZODB
scripts =
    fsdump
